if you wanted to build a new compiler if you wanted to build something that's like really Arcane yeah but that you know a lot about and you have a lot of taste again a lot of opinions about a lot of expertise on yes often you should listen to that expertise [Music] yeah this is Dalton plus Michael and today we're going to talk about commit or validate when to trust your gut as a startup founder so I'll set this one up I find myself encountering two situations at YC um situation one is a Founder who used to work at a company built something extremely valuable at that company um it was deployed the company loved that thing and that founder thought to themselves hm maybe other companies would want it and so they left started YC to try to productize the thing they built example two two kids maybe worked a year out of college and they want to start a startup they're trying to figure out what to work on they're both technical they're smart they're bright they want to get rich don't know what to do yet we see these two patterns constantly and I find it interesting on how we give advice I'm like hey when which one of these people yeah which one of these examples should trust their guy yeah basically we're saying that general advice doesn't apply well to these two cases we are admitting that you actually need bespoke advice yes depending on which category you're in that's a little bit different and so again to make the extreme version of trusting your gut this is when founders think they're Steve Jobs you're like well Steve Jobs never talked to customers Steve Jobs and he would never give people what they asked for no one asked for the iPhone he had to like Envision it he didn't even use a phone invent to the I and so the extreme comic book version of trusting your gut yes is you talk to no one yes you somehow from having great taste or a great internal yeah idea of what want you just manifest it and it's totally unique and different and the opposite extreme is the the comic book version of you know the mom test I don't know anything I I'm I have no ideas at all I'm going to only talk to people and have them tell me the ideas and have no opinion I'm going to assume that I know nothing and all my instincts are wrong in my mind the perfect version of not trust in you got is like the typical investor like I'm just going to hedge I'm going to invest in a lot of different things and see it works I can't even commit to one thing CU yeah sometimes we talk to Founders that are like yeah we don't we don't know what to work on so our plan is to talk to people and they'll tell us what to work on yeah and we're like great how's that going right so it's it's it's 0% trusting your gut all right so let's say you're in that first category let's say that you um you have expertise you're solving your own problem you've done something that's created value either for a lot of people or maybe even just a few how should you think about the challenge of bringing a product to Market slightly differently yeah I I think we would argue that if you were inside of a company you built a tool everyone of the company uses the tool it's still being used even though you don't work there anymore you probably know more than you think yeah and that it's probably okay to trust your gut more than you think that you do understand a problem or that you have a unique Insight you developed some taste yeah and to the extent in other as ects of your life say you built consumer products say you built an iPhone app that was like pretty popular and you've gone through that whole thing and you have an idea for a new iPhone app well I think you might you you understand what it takes to build and launch one of these things and so you might have it might be a better idea to follow those instincts a little bit more yes than than thinking you have no having no confidence your instincts at all yeah and so the more you develop this expertise the more you can self- discern that other people validate the things you've done in the past are good it's not just in your own mind you're you're an expert yeah yes um those folks should feel I don't know like a like I think it's sometimes helpful to just be like no you should just listen to your instincts and just do the thing you know more than most people so listen to yourself to get this off the ground yeah I often find myself saying in this situation like make something that would impress you yeah like make something that you would be proud of like you and then like you know you can sell that to other people like you you know and so I think that's s of a really cool superpower when you can be like oh yeah I can tell whether this is good because it's solving a problem I have or a problem I've solved before yeah I can tell whether this is good if you wanted to build a new compiler if you wanted to build something that's like really Arcane yeah um but that you know a lot about and you have a lot of taste again a lot of opinions about a lot of expertise on yes often you should listen to that expertise yeah well and I think that's what's fun for us as advice givers is sometimes we get to work with those kinds of people and the biggest mistake we can make is try to have opinions it's like build what you want would you have liked this would you have bought it would you have talked to yourself would you have read this email that you just sent about this thing yeah like those tests all work when you know you should trust your when you have some pre-existing experience now what about when maybe you shouldn't trust your gut I think one way to self- diagnose that maybe yeah your your gut intin may not be dead on is where you find that you don't have a lot of opinions about what to work on yeah or that your opinions are very um Mid I'm just kidding where your opinions are just very similar to the 50th percentile of other people mainstream mainstream and so it' be like oh well you know all the jobs you've had are just very high level you never went deep on any particular topic or you just haven't had that many jobs is an example and you just don't have a lot of pref preferences or to the ex you have preferences they're the same as everyone else yes and I think in these situations and and I've seen you do this many times you know you kind of have to have a different mentality like part of starting a startup is going to be building expertise yep you're not bringing expertise you have to build expertise and I've seen you say this a lot where it's like hey if you can start in a good general idea area a good place where like you might think building expertise here will be valuable and if you don't over hamper yourself with a complicated plan you give yourself opportunity to build to figure something out you know and and I think that um we're not trying to say one path is better than the other we're just trying to say like be self-conscious of whether you're bringing expertise or building expertise and then Implement a plan based on yeah that and and exactly so let's give a concrete example here's one let's imagine that you want to work on a new real estate related software company that's your startup idea and in category a let's say that you have 10 years of experience working as one of the founders was a real estate agent yes or one of the founders worked at a mortgage underwriting company for 10 years and built software around mortgage underwriting they have a startup idea and they have a they're like we think that mortgage Underwriters want X yeah what should we do to validate this it's like well I you probably are right or like your your judgment about knowing what mortgage Underwriters want if you've been building software inside of a mortgage underwriting company for 10 years it's probably pretty good probably pretty good and you probably know way more than the average bear about this stuff you've probably tried other products yeah you've probably been disappointed by vendors are available you know why things work and why you know and so those kinds of people should probably trust their gut quite a bit about what mortgage Underwriters want yes now let's use a different example with exactly the same idea a mortgage underwriting software startup for real estate and the founders have no experience whatsoever in the industry maybe they've not even bought a house before well let's just say they bought house okay we'll give them that right yeah that's why they're interested they bought a house and they have some ideas that they're like well we think the real estate industry is broken and it's weird that it works this way and so we just think we can fix it yeah and you kind of ask well what you know how much research have you done or how many people have you talked to in the industry none yeah and they don't know anyone not these folks can still be successful yes but you those folks should probably trust their gut a little bit less that they know precisely what to build to get this off the ground I think that where we see this goes wrong is when the founder with expertise is fearful and acts like the founder without and the founder without expertise is too confident and acts like the founder with yep and I can't say this enough like I've seen so often the found of expertise where I'm like you know so much about this will be afraid maybe the thing I built was only no one else will want it or like maybe my taste is unique or here's one have you seen this one where oh I know what to build and they want it but I don't think VCS will fund it yeah like basically they're like oh okay we actually know exactly what kind of software mortgage Underwriters want but we're building some AI yes because we think we need to say it's AI related yes to raise money versus the thing that we know is actually the problem yes does not involve AI at all yes like we're ignoring all of our expertise because it's not AI yeah and obviously that's the only way you can raise money and then on the flip side it's the the the team with no expertise who are planning out their hiring and talking about how much money they need and reading Goldman Sachs reports about Market sizes and oh well we need two years to build it because it's really complicated it has to be comprehensive solution it's like hey maybe you want to build the smallest thing possible and learn some more and by the way this isn't um we're not trying to give quote unquote permission to take 10 years to build the magical thing all we're trying to say is like when building the MVP how much should you be trusting your gut how much should you be trying to impress yourself versus trying to impress initial users and hopefully um you realize something really important which is that if you have expertise and you press yourself you're you're walking a good path you're walking a good and if you don't no sweat most folks that we fund most folks that get into YC don't have a ton of expertise that is totally fine totally fine it just means you should admit that to yourself yes and start really simple and learn on the fly learn within the idea space that you've chosen yes and don't have a lot of prescriptive ideas on what mortgage Underwriters want yes just sort of walk in with oh this is kind of what I'm thinking but I'm open-minded that I need to learn a lot and maybe it's helpful to choose an area that you're excited to learn about yes because you have a lot of learning to do yep so maybe it's helpful to not choose an area that you think well I hate this area but I think it's going to raise money it's like not the best play I think that if you can figure out how to leverage this advice it's it's really interesting and I want to bring it back to the first point you made it's really hard to give one siiz fits all advice like these two examples you come with expertise you don't and it's the same idea I'm arguing this is precisely the same startup just with different people that are the founders yeah I think this is what's fun about working at YC is how often when in office hours with the founder I'm like oh actually you should maybe do it differently than like what you might hear in the video like you you're like that's the kind of cool thing about being in the work with people one-onone you can actually customize awesome thank you very much sounds good thanks [Music]