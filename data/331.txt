okay so this is how to evaluate startup ideas and this is actually a new set of content that we've developed based on a lot of feedback that we saw from the last startup school and what we noticed is a lot of people's challenges so last year's curriculum actually had a lot of content that ended up being when we looked at the data for who's participating in startup school was like oh this is much more advanced it's much further along a lot of people for instance like I had no idea or like I have too many ideas that they don't know which one to pursue it was a main reason why a lot of people are only able to work on their startup sometimes part-time yes they might be stuck but that resources but they didn't have conviction they didn't know like oh what would I have to believe in order to say like I want to quit my job this is also a really great sort of skill to sort of have because if you are realizing you need to pivot how do you evaluate if you need to do that and then also if you're pivoting to something else like how do you evaluate whether something is worth going to and if you already have a launch company then you might have problems with like why isn't this growing or how do i improve it and evaluating your startup especially in a way that sort of adventures evaluate startups ideas we find it's going to be really really useful there's just like myth about Y Combinator is that people think YC only funds companies who have tons and tons of traction right that nowadays the only way to get into IC you have to have lots of revenue or tons of users already and part of that has to do with like the press and then the exposure of the companies that make it the demo day those are the stories you tend to hear but that being said there's lots of great examples of companies who actually got accepted just with an idea and so zenefits is a really good classic one Parker was a single non-technical founder who pitched an idea to YC and he got in that way we also had reddit so technically they were forced to pivot right away so they hadn't written a single line of code and then my experience in in YC is actually exactly the same so when I founded wafu and we entered that second we also had not written a single line of code PG had invested us at just the idea stage and so I feel fully committed now as a partner to always be trying to find and dedicate time and energy to funding companies we're just at the idea stage a lot of our efforts here for working on startup school is to help us help you work on how to talk and think about your startup and that if we can fix that it can help you sort of inspire us to be like oh yeah I can believe in what you're doing and a lot of times founders get in the way when they're telling their narrative so how can I predict if an investor will like my ideas that's ultimately what we're trying to figure out and the answer is really easy and so for us at YC the definition of a start-up is a company that is designed or created to try to grow very quickly so if you're not trying to build a company that grows very very fast then you're just building a normal company it's a small business and there's nothing wrong with that but these companies are the ones that investors are interested in so if you look hoping to build something that will have tons of users that will have huge valuations that'll be able to attract venture funding then the evidence that we want is evidence that shows that your company can grow quickly I have a confession to make if you ever meet me or talk to me about your startup and kind of recruiting or at one of these events I will never tell you that I do not like your idea and there's a reason for that is not to be nice to you is not to blow smoke up your ass I learned this way of thinking from Paul Graham he says like look the average investor or a lot of investors that you see when you talk to them about your idea it feels like they're trying to poke holes in your idea they're trying to figure out what's wrong with it and then I like trying to show some not just how smart they are and he explained that like his job in the way he sees our work at YC is that it's not to figure out what's wrong with the company but to figure out how it could possibly win because our bets the ones that win are the ones that are non-obvious right and so for us to figure out the non-obvious stuff it's good it's not sound obvious when they first tell you and so we have to like work on our imagination we have to work on our optimism to figure out what is the way that whatever story that they're telling me could become a billion dollar company and then a great investor pitches that back to the founder I figure out all the ways that I think whatever you're doing could possibly become big and then I'm trying to convince you that this is what needs to happen so that I would have the evidence or that you will be on the right path to having company that grows quickly a start-up idea is basically a hypothesis and this is the way you should think about it it's a hypothesis about why a company could grow quickly and your job is to figure out how to construct your hypothesis basically the pitch to the investor so they understand how it can go grow quickly a lot of times people make the mistakes of trying to just accurately describe or over describe a lot of different parts so I'm gonna break it this down so just like a normal hypothesis has a pretty decent structure for this this will hopefully help you sort of workshop like understanding oh this is exactly all the reasons why this should succeed and so even before we start even building anything we can have an understanding of like oh here's the potential path of this company or here's the things I need to prove the show that this company could do well so the first is the problem so startup idea is composed of three parts the first part is a problem and it's basically the initial conditions you have to explain to me like what is the setting for this company that allows it to be able to grow quickly the second is the solution so this is basically what is the experiment that you're basically running within those conditions for it to grow really quickly and the third is what's your insight so what's your explanation why the thing that you're going to try your experiment is going to end up successful those are the three components that are always trying to figure out when I'm listening to someone's pitch here's a tip for talking about the problem or to know whether your problem your initial conditions are correct the first is good problems they're popular so a lot of people have the problem you want to avoid problems that there's a small number of people that have it we like problems that are growing so therefore the market basically like is it growing at a rate that's like more and more people going to be having the problem and it's it's growing faster than other people's or other types of problems we like problems that are urgent ones that need to be solved very very quickly we like problems that are really expensive to solve because if you're able to sort of solve it then you can charge a lot of money potentially we like problems that are mandatory right so therefore it's like ah people have this problem and they have to solve it and then we like problems that are frequent ones that people are gonna encounter over and over and over again and often in a frequent time interval so what you want to have is like some aspect of the problem that you're working on at least one of them and that's ideal if you have multiple of them you don't have to have all of them but it's one of those things where it's like if your company isn't growing or if someone's not as excited about the problem it's probably missing some of these characteristics the last one about frequency is super important because I like problems and you'll find a lot of other YC partners like problems a lot that gives people a lot of opportunities to convert part of that has to do with some theory so BJ Fogg he's a researcher at Stanford and he tosses his formula up all the time I mean he says basically if you're trying to change someone's behavior you have three things you need to have in place you need to have the motivation the ability and the trigger they need to all happen at the same time so the motivation is like I have this problem I need to solve what is it whatever it is the ability is your startup and the last is the trigger what's going to be the thing that gets them to all of a sudden realize Oh need to solve it with your thing and so a lot of companies will have like oh I built something but for some reason no one's signing up or like they're not using it they're not engaged I have no retention and a lot of times is because it's like you're hoping that they will somehow just remember on their own that they have the problem and to start using you and oftentimes most companies don't send enough for example email notifications or triggers or reminders or figure out ways to come back into the app or figure out ways to be back in front of the user at the right time and if you can't figure out those opportunities it's really hard to get people to switch over to using your solution service or product so our ideal problems are millions of users right millions of people have it that's why people like to work on consumer companies it's why some investors like to focus on them we like markets that are growing 20% a year the problem is growing quickly we like problems where people are trying to solve it right now immediately we like problems that just cost a ton of money so billions of dollars right or at least they all add up to some billion dollar total addressable market we like problems where the law has changed the law has changed and regulation has put up there and now people have to solve a bunch of problems you saw a ton of healthcare problem healthcare startups were born after Affordable Care Act was passed and a lot of that had to do with like there was now all the sudden opportunity this problem that all these hospitals and clinics had to solve and then we like problem is that people need to solve multiple times a day or will use it multiple times a day Facebook's a good classic example but people also really loves to slack right because it's like oh I'm gonna be engaged and using it multiple times a day during the wait work day solution so there's pretty much only one piece of advice I really have for this solution that's the best advice that you can ever follow and that is don't start here so what I mean by that is a YC we have an acronym for a problem that we try to avoid or basically an application we have to go like oh man I wish they had started with the problem first and we call it sis P it means solution and search of a problem and often what happens is like you're an engineer you're excited about technology some new technology has come on the scene let's say it's blockchain right let's say it's like react native or whatever the new thing is and you're like I want to build something with this it's a large reason why you start working on a side project and then you go like okay what kind of problem can I solve now I'm gonna use this no matter what and then you try to shoehorn a problem into the solution and what ends up happening is that's a much more difficult way to grow the company it's not impossible for companies to grow this way it's super inefficient it's much better to be like let me see what problems people have and then I will use whatever is necessary to solve them and therefore it's much more likely that you will grow as a result because the other way around is you might have to go and try to drum up the problem or you have to like brand the problem as something that people have and it's so much more difficult you end up growing much more slowly as a result so look at what you're building right now or look at the reason why you're trying to do this startup and is it because you only care about the technology and building something in that or have you started with the problem you go like I'm gonna do whatever it takes to solve people users customers issues the last one's a little tricky it's what is the inside what's the reason why this solution is going to work and this is where a lot of companies sort of get tricked up because it's really about like what is your company's unfair advantage right why are you gonna win versus everyone else why are you going to be the fastest one to sort of grow because that insight is what's needed for the investor to choose you over anyone else and it has to be related to growth you have to have an unfair advantage that explains why you're going to grow quickly if it's not related to that then it's not it's not going to be something that an investor is going to find valuable and the last one is you need one you you can't just be like I have a problem I'm solving it and it had no explanation why without that last sort of explanation I can't use my imagination I can't evaluate just solely on how well you've thought through this problem all right and so let's go through the types of unfair advantages that your company have so there's five different types and companies do not have all of them really great ones surprising not surprising we'll have all of them and we'll go through two examples but you want at least one and it's nice if you can have two or three but for most of you it's probably just one so the first one so how do you know if you have a founder unfair advantage and so all of these will be connected to numbers actually which will help this make this really easy it's like are you one in ten of all the people in the world who can solve this problem are you super expert and 99% of the people we find out why see do not fall into that category and so if you think it's like well I'm a product manager at Google there's a lot of product managers at Google if you say you're an engineer at Microsoft there's a lot of engineers at Microsoft it's like great but it's not one that will make me think oh you have a grater on a very understanding someone else if you've done a PhD and let's say you've done it on some kind of crazy biotech research and you have like a special patent to be able to cure some kind of disease then you have a founder advantage your market is it growing 20% a year like by default if you just build the solution in the space you should just automatically grow because you're just following a trend if this is your only company advantage then it's one of the weakest ones that you could have it is great to be in that space but you want to have something in addition to this like you're gonna do like better than average because you've picked the right problem space and the right set of customers that want your problem but again if you're in a market that is stagnating or shrinking then you're gonna have investors worried about the long-term viability every company as a result product so super simple is your product 10x better than the competition if it is then you potentially have an unfair advantage and has to be very very clear someone should be able to look at your product and go like oh this is so much better than everything else I've ever seen it is 10x faster it is 10x cheaper etc and if it's not an order of magnitude let's say it's just like 2x or 3x again that's nice but it's not enough for an investor to go like oh this is a slam dunk in regards to that 10x product and showing that you are able to have that a later in startup school going to do a lecture on pricing and we'll talk things about cost and value and that'll help you sort of better understand it's like oh how to better prove out that 10x multiple using sort of metrics and numbers and pricing acquisition so a lot of people think that if you go to investor and you've done a bunch of Facebook or Twitter or Google Ads and you show your CAC and an LTV that you were able to prove that you have a sustainable sort of acquisition model and I want you to know that if paid acquisition is the only way that you were able to grow your company then I'm gonna discount that channel of growth greatly that is because if you actually get really popular you can actually start being someone significant let's say becoming a hundred million dollar revenue company then you're gonna attract a lot of competitors into the space and that advantage is going to quickly dwindling is a really good example of this almost all their acquisitions isn't paid and then once they ate through that there's almost nowhere else for them to sort of go you want to find acquisition paths that cost no money and my favorite companies the ones that become really great are the ones that can grow by word-of-mouth this is a good percentage of the way they grow and so in the early days of your startup if you don't have any money that's actually very great way of exercising how do I grow this without having to pay for it and so in the beginning we tell you to do things that don't scale but this is what you sort of want to accomplish it's like do I have an advantage that is free and the last one is do you do you have a monopoly and so we don't mean this in the monocle monopoly game sense so we made it as like as your company grows is it more difficult for you to be defeated by competitors do you get stronger and so a good examples of that are like companies with Network effects in marketplaces where marketplaces where it tends to be a winner-takes-all a one company will tend to win and network effects is just basically as my network grows the strength of my company and the value of the product or service also grows with it not every company has it well when you do have that it works out great there's something to keep in mind also other things I'm looking to believe about a company and that is something that trips up a lot of founders and so there's two types of beliefs that I have about a company and so there's the threshold belief which is like what's the default just for them to even succeed so oftentimes for me it's like oh then building it can they even built it that's a threshold belief if they can't even build it none of it even matters and so to me that question is not the most important what will determine whether I'm gonna win the lotto it's a miracle belief that like oh my god if I believe that they can do this that actually going to be able to take off really well and sometimes are really simple so if you are heavy engineering team or doing a B DB or Enterprise startup again the default is you have to build it so if you can't even build it then it's not even gonna work so I don't spend actually a lot of time looking at that for me I'm trying to figure out success will be determined by how well you can do sales how well you can tell the story how well you can actually convince customers and work through a sales process I want evidence that shows that you know how to work through that and make that happen and so all of my work with most of those companies is like not working on product it's like hey alright let's prove this other thing if you have that that'll be the thing that actually will help people go like oh they have this super combo let's go some some quick examples so YC is a good one because we like to think of YC as a startup so the problem the way we'd word this is it's hard for founders to raise money without knowing someone in venture capital so at the time it was started you basically had to be an insider it was the only way you can sort of get money and that's super sucked and the solution that basically Paul Graham came up with is like investing companies through an open application you don't need to know anyone you just tell us your idea tell us a bit about yourselves and that should be enough for you to get funding now there's a bunch of unfair advantages that YC had number one the founders are pretty incredible so Paul Graham had wrote a textbook on Lisp RTM like wrote the very first worm he's like amazing programmer and they had built and sold the first SAS company that was via web to Yahoo so they were kind of experts at both evaluating technology and also understanding kind of starts in that whole process the market basically believed that future billion-dollar companies would be technology companies they'd be powered by software and the wonderful thing about tech companies especially at that time was Moore's law was making it cheaper and cheaper for software companies to be started and they furred they needed a whole lot less money and he could make a lot more bets as a result the product so basically you know they pay the founders that come for three months they get some advice they work on their product for a relatively small amount of money and then at the end of the time instead of offering co-working space they work from their own home and then they pitch to a bunch of different investors and the idea was like that would be so valuable to a potential founder who had no connections that it would attract a lot of really great or a lot of people who were hungry to get into the space acquisition so most people don't realize this is like PG was able to sort of build up YC and attract the right talent because he had a huge reach or audience when he got started he had written that textbook yes but he also brought all these popular online essays and had a large audience of his target users hackers to come and evaluate his product and you can acquire them relatively cheaply just by baking a website and letting it be known and then the last one is something he didn't even realize when he started YC and that is that as the YC alumni network grew it got more powerful and more valuable over time the results are funded 2,000 companies there's 4,000 founders they're the CEOs of some of the biggest companies in the world they are over 15 companies worth a billion dollar a billion dollars there's 93 companies with over 100 million dollars and our total market capitalization is over a hundred billion dollars I'm gonna do one more example with you guys so we flew this was my startup and it's an online forum and survey builder and so for us it was basically every website needs to collect some kind of data at some point but you need to know how to code or hire a programmer to be able to do it and so the solution was to build something that what they see is what they got like basically a drag-and-drop visual editor and that any non-technical person sort of create and then if we did that we would solve that sort of specific problem so very quickly the market it's kind of ridiculous like we were asked in the early days calculate our Tam but it was like every website needs I don't really understand like what website doesn't need a forum eventually it allowed us to grow really really quickly our product was easily shown to be 10x faster and it's against the direct competition with other builders because it was so much faster to do the drag and dropping and visually see and then usually a hundred X faster than like a lot of traditional routes for very custom forums for hiring a programmer and very cheaper because we had this freemium model that also led to an acquisition unfair advantage and so we actually had started off with building a blog and building an audience as well started off with a hundred thousand developers subscribe to our blog we launched it out to them after building up that audience for a year and that's actually what we applied to YC with it's like we had built up this audience we had proved that all these other things are like in place and then part of the other acquisition model is that you could embed these forms on people's websites and then our users basically spread our form and software for us as a result so we never had that hire any salespeople and the results are our product was used by every industry market and vertical you can imagine the homes of super large companies and we did this with a relatively small amount of team when we were acquired we were weird outlier compared to all the other acquisitions the average company raises only raises like twenty five million dollars before an exit and this is their average return and for Ruffo we only raised 118 thousands for the whole life of the company and our returns are over thirty thousand percent okay so in the end this is very simple exercise but super enlightening once you actually go through it and to try to figure out that narrative and story so I turn it back to you go through and try to answer those questions about problems solution your unfair advantage figure out where are my holes do I have one and then the question becomes Oh what do I need to prove what do I need to work on to make that happen your startup idea is a hypothesis about why you're going to grow quickly for our next lecture we're gonna talk about the first ways we try to prove it out so to basically test our hunches and that is by talking to users you