well thank you for coming this morning we are trying something a little bit different this startup school year we are not just having our weekly to lectures but we are having some conversations with notable people and I couldn't be happier to have one of the most notable startup people here he'll get embarrassed when I say anything complimentary so I'll try to avoid it Paul Graham my friend and the the founder of Y Combinator back in 2005 and we're just going to talk and hopefully it won't be boring Paul yes Jeff so you and I got to know each other strangely at a it was kind of a start-up at the time Yahoo back in the late 90s 98 yeah guys know he wrote Yahoo Mail some of it yeah Y Combinator has the people who wrote Yahoo Mail and Gmail that is weird right Paul Buchheit who who actually has more of a claim on actually writing Gmail than I do have a claim on writing Yahoo I wrote I wrote some important parts of Yahoo Mail but Paul was kind of by himself doing G almost and we had we were a little more intentional with yahoo mail and had had a team creating something called rocket mail but it is a little weird that both of us ended up at YC years later uh but Paul was at Yahoo I was at Yahoo because we created something called rocket mail and we were purchased in 97 but a Paul's company was bought in 98 and so how can you you had this weird idea for a product for something you thought people would would want in in the mid-90s which had to do with like SAS before SAS was a thing how did you come up with this idea for for via web the company that Yahoo bought okay so what we made was something that is now called a web app I believe at the time I was the first one and that's why the company was called via web because it worked via the web and the way I remember very vividly we thought back then everybody thought that writing software was identical with writing software that ran on the client and we're still for those of you who remember the mid-90s the client meant Windows right and like we knew how to write software for UNIX and we liked UNIX we did not know how to write software for our windows but we knew enough to know that we did not want to learn and so we were really really highly motivated to figure out how to write software without having to write software to run on Windows and so we thought to ourselves well maybe well you know the way I first thought of it actually was that you would have this you would have it was an online store builder right and I thought that you could you could send it updates by email that was I thought you can send it updates by email right um and it would change your website and then I remember thinking well if you Coster us for shopping carts or whatever if you can use SMTP why not HTTP to update your website whoa you could cut the software could run on the server and you could control it by clicking on links in the browser would that even work right but I remember I was like sleeping on a mattress on the floor in Roberts spare bedroom and I remember I sat up in bed when I thought of this like like the letter L right it was actually like one of those scenes in a movie I'm like oh my god we could avoid having to write software on Windows at all we never at that point we were never thinking about the benefits of web apps which are great as it turned out we were just thinking we could like actually do this without ever having to learn pointing windows you did yeah at ER that like you could deploy then without having to ship software did none of that avoiding windows we could actually write thank-you gates never have to learn windows because like the Netscape people had already gone through the pain of making Netscape work on Windows hey just like that was like a hole onto Windows you know and people could get through the hole and click on links in the browser and control the software and so we immediately we weren't even sure this would work because it was so weird but we immediately sat down and tried to write this really really clunky website builder that worked by clicking on links it was terrible but it did actually work it could make a website and I'm like holy this actually works that's weird that like an innovative idea like that just sort of comes out of no I mean it scene doesn't seem innovative now because all websites work that way but the first one like that's that's going from 0 to 1 how do you like it's very common happen right very common for ideas in retrospect they see him obvious and you and Matt you sort of historians who weren't there sort of straighten out all the kinks in the development and it just seems like oh they had this you know it's like this idea I always hate it when people represent startup ideas as light bulbs you know because as well as being the most cliched metaphor imaginable it's also false you don't just like have this idea and then realize it right no it's more like you have this sort of inkling that something you could do something that somebody else hasn't done before and it's probably a bad idea but you're too lazy to learn Windows and so you want to do it that way right um and so or like who would or like Zuck starting Facebook you know just like let's see what happens right the way implausible if this would ever be a startup which is good for you all hopefully some of your ideas seem really implausible right I love it when ideas seem implausible in the right way over the years I mean I already had just from being a hacker as sort of a good nose for this sort of thing but it has become refined over all these years of dealing with startups and when when people have I was talking to some people yesterday and they were talking about two possible things they could and one of them seemed so it seemed like naughty not like it was it was it was sort of maltreating anyone it was just sort of taking advantage of something that seems like it shouldn't even be possible right like like making this software run on the server and just like never making software that seemed to the users to run on their computer but actually was just talking to them through the browser that kind of naughtiness and then I said like pick that one because it seems it seems so outrageous it seems so hilarious it seems like there's all these ways we have talking about what's a good idea and when you try to match up ideas with them it's always sort of a complicated you know it's like is this idea naughty or is it is it is it is it like not quite intuitive or not so javea and it's really always hard to to take any particular idea and say is that the one was potential well you can't tell in fact that's another thing um it's not just that the outcomes of startups are hard to predict I think to some degree they're actually indeterminate there's a huge amount of luck involved you know and so I think even if even if Y Combinator were as good at picking startup so you could possibly get I mean in fact you have like 150 startups per batch of which maybe 5 will become giant or something like that hopefully high that would be good yeah well depends on your definition of giant right it's a power-law distribution we're like if for some definitions of giant one of it one is taking any batches will think if five or any definition of giant yeah we'll be happy so talking about I like oh yeah the indeterminacy of yes even if you were able to pick perfectly that doesn't mean you could get the batches down to only five startups you probably have to pick twenty I think even if you were perfect so it just it's just it's hot it's hard like it's hard to know there's this there's a strange mix of extraordinary hard work an idea that actually has something to it but is not obvious it's hard for founders to know yeah you don't know yourselves you don't know yourselves I mean I mean you don't know comma yourselves not that you don't know yourself so that it's also true so and that's why it's good to be a hacker because if you're some business person you know and you think I am going to work on business opportunities right well I don't know if this is a business opportunity so I'm not gonna work on it um whereas someone who's a hacker who's just doing things for the fun of it or because they don't like Windows yeah laziness to this is actually in some cases really helpful at least some kinds of some kinds of later I'm a little scared about this meme escaping into the wild right can't you just see well yeah you just see it's it's truly they said laziness is good he said from the sofa as he ate another doughnut you know it would be better if people thought laziness wasn't good because the glaze enos the kind of the people to you that's good they do and they would do anyway even if they thought it's weird yeah well using laziness not in the normal sense of laziness right because if you're late there's there's no such thing as a lazy founder that it builds a big company there's but but a certain sort of it's sort of a reticence to do something for some reason I'm calling it lazy weightings not really it seemed like sort of slaps it makes you it you know if you have a natural hatred for gratuitous slap slaps like then what that that produces elegant solutions so so in 1995 ish I was like trying every single idea I could possibly try to start some internet business and I was doing it all by myself which was awful and and what I didn't know how to do was to find people to do it with and I kind of ran into a bunch of people and I had no clue whether they would be good people to start companies with and I was thinking about your experience you said you were like sleeping on Roberts well you started you started via web with two fascinating people Robert Maxwell and trevor Blackwell who later robert morris robert morrison and trevor blackwell robert maxwell Morrison Trevor Blackwell and that's a that was a weird mix of names anyway um how did you pick them as co-founders how did that happen and and when did you decide they would be good co-founders were they good co-founders um alright so yeah right they're extremely worked they were extremely truculent co-founders who were very good at programming but I remember Robert was like not into the whole startup thing the entire way like whenever he was on the board and whenever we got and whenever you get an acquisition offer the board has to at least consider it right and so we would get these crap lowball acquisition offers we'll give you like two million dollars in our stock right was like yes no no Robert would say like we would vote on it and Robert would always say well you know I have to be honest here like this would at least mean we could stop working on this thing and so yes I would take this deal right I made a deal with Robert that if he ever made a million dollars out of out of via Web he would get an earring Robert it's not the kind of guy who would enjoy having an earring let me tell you um and so as soon as the deal closed me and Trevor frog-marched him to the place in Harvard Square where people get their things pierced never heard this before he got him an earring there's photographs on the internet if Robert Morris with an earring that he didn't keep it when his but not for long we should have specified that I never thought I never thought to specify you know I thought you'd actually get the million dollars no no I really actually did but I thought he would wear it for a bit longer um when his fiancee saw it she fell on the floor why did you choose why did I try killing Trayvon ders okay so I chose Robert because he was my co-conspirator in everything and I don't mean I was always I was always the lead and he was just the co-conspirator when he did things I would be his co-conspirator to you so like the internet worm if 19 you guys know Robert Morris's is pretty famous all on his own yeah he invented buffer overflow and I remember when he told me about it and I said wow what a cool idea she totally do that he was the first famous hacker who really got in trouble I think yeah really in trouble he was the way it's true he was the first person to be prosecuted under the Computer Fraud and Abuse Act of 1986 which so if you're looking for a co-founder look at people who have been prosecuted because it works yeah user he is actually a convicted felon okay this is another mean we don't necessarily want to escape out there that convicted felons are what you want to look for as co-founders they're convicted for that maybe it was funny because the FBI like like law enforcement kind of does things by the book right like imagination is a big thing in in like Sherlock Holmes stories but not in actual everyday law enforcement and so they have these the FBI agent told me like they have these motive they look for sex drugs money revenge right and so like Robert did it out of curiosity and that's just think it's just not on the list hey they really had a hard time figuring out what the hell was going on I think even within the government there were lots of people who did never understood what was going on so back to Robert and Trevor whoo-hoo oh so why did I pick Robert Trevor yeah Robert Robert Robert I picked because I would I would do everything with him right we had all these schemes and so you knew you could work with him I mean I could work with him when I knew it was really good he was a really good programmer he could program as fast as he could type of course this was in C which is a lot of very verbose language but but he could program as fast as he could type he was amazing he would like if he didn't like what the operating system would do it he would edit the source and recompile it and then it would do what he wanted so truculence aside he was exceptional like when he showed up at Harvard undergrads were only allowed to have accounts on like the official undergrad computing system off in the Science Center and there were all these real computers in the cs department and let aiken lab and so they wouldn't give him an account there and so he just walked up to you a machine you know switched it to single user with him as the super user gave cellphone account and then and switched it back hey it was curious yeah well he also wanted to counts on the right machines he got kicked this whole thing will be about Robert Robert such an interesting character I shouldn't talk about it may be more interesting than anything else we can talk about he got kicked out of Harvard as an undergrad for reconnecting Harvard to the Internet um Harvard Harvard had been one of the early internet nodes that's so funny to like like get interval for disconnecting a school from the internet connecting it can happen for connecting a school where were we well we're still trying to figure out why the heck uh oh I should tell you though about how we tell us about the disconnecting really fast no no it's okay so we have all day we don't do it no we don't okay how long have we have we have enough time we have the same watch more or less Robert okay it was one of the very early internet nodes and by the time Robert arrived in as an undergrad the connection had died from bit decay that's like no one noticed that's how unimportant the internet was back then or rather ARPANET as it was then called verily an Internet right so RT M spent one whole semester working on getting Harvard reconnected RT M is Roberts yes yes Robert and he like didn't do any work for any of his classes and he got such bad grades he got kicked out for a year so we actually used that later as a recruiting technique because we knew there because there might be other people who got kicked out for spending all their time on some project and so we actually went around Harvard and posted up this poster saying did you get kicked out working on some project of your own we'd like to hire you I think there's probably so we got a really grid programmer that way um there's probably something made tons of money off of options cuz we got acquired journey here right and you like enjoyed life out of school so much I don't think he went back until he was 25 so um all right so why did why Trevor why Trevor well so you picked Robert Robert was what was the guy you did everything with and he was great okay so after we'd been doing before the wave when you picked Robert did you know he was gonna be a pain in the ass in so many ways as you like or was that a surprise to you well I knew he was a pain in the ass I didn't know the company was gonna be so hard and it would bring out so much penis so you didn't realize how hard tell you the way we got Trevor was very indicative yeah so a month in we'd been working on this company for a month and Robert rebels he says we've been working on this company for a whole month and it's still not done and I thought hmm maybe we need more programmers so so I said all right Robert who's the smartest person you know in grad school and he said Trevor right and I said Trevor right and Trevor's one of those people who seems of a lot smarter than you seems so but it's Trevor is actually super smart and so we went and recruited Trevor and he said oh okay that's that's a really good Trevor but almost not a Canadian Trevor has two modes oh okay and oh I'm sorry which is what he does when he does something that breaks everything which was very common very common and so we got Trevor I recruited Trevor to work on the thing he does nothing for two weeks at least as far as I can tell he just disappears and then two weeks later he says come into my office and he's rewritten all our goddamn software in small talk typical yes um so I said all right Trevor we're not using that but do this instead right um and so Trevor like Trevor was like this super productive hacking monster but you didn't know that in advance you just trusted Robert when Robert told you he was really smart well if Robert said he was the smartest he's deaf the smartest but there's kind of a deep lesson in that and how you how you pick whether whether it's employees or co-founders it's you find someone you trust and then find someone they trust yeah although here's an interesting point that works better for some qualities than others like intelligence the intelligent people can judge other intelligent people but trustworthy people cannot judge other trustworthy people in fact trustworthy people are often fooled by untrustworthy people so like Kate quarto is like our architect who did this is like super trustworthy but she's always fooled by easily sneaky schemers you know who take advantage of her so I guess that means you take recommendations from people but then you have to add your own no no no you can totally dress but if Robert says someone's smart and I disagree I think I must be wrong right yeah but you need to just works for some qualities better than others let's hold right you want them to be trustworthy when they join you as a co-founder so you have to add that for the trustworthiness yes this whole thing of like networking doesn't work it doesn't you have to have someone you can judge whether people are trustworthy which I'm I am not even good at I am not good at the person who does that for Y Combinator is Jessica the social radar the secret power behind everything so you did hire people at via web - yes what did you learn about hiring in your like your first startup like so you learned that they they if they were getting lousy grades your start working on a project that seemed good which is which is kind of counterintuitive a lot of things we seem to do it.why see end up being counterintuitive startups in general are very very counterintuitive and so that's actually why C exists if it was obvious what to do and starting a start-up we wouldn't why C couldn't really add much by teaching people how to do it right and so I often say I often in fact practically every day if I do office hours I'm reminded of this that like what Y Combinator does is tell founders things that they ignore right so we tell people don't hire to you fast and then they go off and hire to you fast and then they come back later and say oh I wish we'd listened but all the things we tell people we tell people the counterintuitive stuff not the obvious stuff and then what counterintuitive means is it sounds wrong and so they go with their gut and do the wrong thing instead and then hopefully catch the mistake in time why is it that startups are so counterintuitive you know that would be if that would be very much writing an essay about that would be worth writing an essay about why startups are so counterintuitive I don't know I don't know I don't know it's I could come up with some theories but I have a feeling the answer is so interestingly complicated that would be unlikely to come and it's really just we were just talking about one of the things that that you you did write an essay about which is somewhat counterintuitive when you start a startup and you're like okay now I'm gonna grow and then you write a whole bunch of stuff but you've already software that helps you grow and and you're at a whole si says don't do that do things that don't scale in the beginning yeah do things that don't scale because growth is maybe you can start by saying what it means to do things that don't scale because I'm afraid the best thing you did not already I'm sure you've all read all as well as I say but this is a this is actually very important because most of you all have early startups and when you do an early startup it's become our mantra YC and I've seen it again and again you should not try to do too much in the beginning you should do things that don't scale what doing things that don't scale means specifically is doing things in a sort of handmade artisanal painstaking way that you feel like yeah it would be great if you could do things that way forever but you and you're in the back of your mind you think to yourself well there's no way we can keep doing this and become giant right and what do things that don't scale means is do those things early on anyway because you know if you don't do them you'll never be big and you've got nothing to lose and also you learn a lot from it you learn a lot and so I discovered a lot of this things that we teach startups at Y Combinator or you teach startups the Y Combinator I'm retired I don't know if you know that but a lot of things you guys teach startups is are things that I hit myself and didn't realize that they were actually common startup lessons so one of them is doing things very manually for your early customers like it's so important to get early customers that if you have to do a ton of manual stuff that's ok you'll learn a lot from it did you guys do manual stuff oh yeah well totally and we thought oh we're doing it wrong this is so lame and in fact it was exactly the right thing we made an online store builder you could build a store on the internet and sell stuff and we would go to would be would be customers and say would you like to use our easy online store builder and they would say no and we would say but you want an online store right and they would say yeah and and they would say well what if we use we would say what if we used our software for you to make an online store and then you could have it would that be good and they'd say all right and so we'd like we can't get anyone to use our software but at least they're willing to let us use it for them and it seemed it seemed so lame I learned so much about like direct marketing as it turns out it's called we were members of the DMA the Direct Marketing Association that's what you know in every business card carrying member the DMA were we were in every business they have a name for the business that's not the name Outsiders call it like fast food no no no they don't call it that they call it fast casual within the industry right and in in the catalog business that used to call the direct marketing industry right um so that's what the dma meant back in those days the catalog business we signed up for every catalog you know his catalogs you get in the mail we would just like write a wide right and ask for more well you had this like bookshelf full of every catalog ever yeah it seems like almost like if you were building a new search engine and what you ought to do is have a have your box out there and then just take all the searches manually and like get results and throw them out there and see what see what happens I'm trying to think what we did for mail that was manual in the beginning we we sort of a manual ad server like we didn't really have ad serving technology we just throw at like I wrote it so it wasn't really good and and we would just throw them in there that there's a deep lesson there for four for four people though like what happens if you think you know the solution and you build lots of stuff for it you're going to be wrong because you just don't know and having to use our software myself made it much better because I would be using our software to make someone's website right and I was also the guy who wrote the site builder and so I would be using and think to myself this is inconvenient it's like going in the middle of building their site I would change the software and I mean ship as in like MV and like that's like that's the great thing about server based software ship is the UNIX MV command so well know CP I would want to keep a copy but but I would like change the software in the middle of using it and then go back to working on their website and boy did that make that that made the software much better that I had to use it yeah so um so picking co-founders you want to pick the best people who you can somehow believe are trustworthy it's probably helpful for a lot of people I think a lot of people taking the class or sole founders now yeah why is it that that sole founders that being a sole founder is so difficult Wow um there's so many different reasons like I think the hardest part is more L there's no one there's like if you have multiple people they keep one another going when things are going badly and there's no one to cheer you up that's what's hard for me I remember 95 I'd be like I know this internet thing is gonna be real but damn oh so you were sole founder yeah yeah that's why his hair is greater than mine the yeah like being a sole founders hard like it's hard because there's a million reasons why what you're doing isn't going to work and mostly you're right so it's easy to convince yourself to used used to say this and I always remember to used to say look you have two choices as a founder do you remember what you would say after that well there's so many different cases this versions of this what will he would say you could either quit or get rich mmm yeah die or get rich like the company's a lot of versions well that's what happens with startups mostly the company either dies or it's something succeed you get rich and you know getting rich can mean you know you have a nice little business where you're the boss and you have 20 or 50 employees or it could mean your Airbnb right they're both good outcomes not as good for your investors necessarily but for you it really good and and doing things that don't scale that's hot you know and internalizing what that really means I was thinking about you know one of the it's the sort of things that don't scale we talked about at YC all the time we say you're supposed to for success you talk to users and write code you you talked and if you think about it talking to users especially as sort of the founder doesn't really scale very well but that's what it forces you to do if you have to do everything it doesn't scale it forces you to learn right in the beginning you only have ten customers you want to grow to 20% you want to go 10% next week 10% weeks an ambitious goal you only got to get one more customer you can go out and do that very manually right and then next week you have eleven customers you have to get 1.1 customers right so this is basically one right you just keep going out there and doing things manually and as long as your growth rate is good it doesn't matter how small the number is because a grow a constant growth rate means exponential growth and that means the base number will soon take care of itself it's kind of thinking about what makes companies good what makes companies fail and I was thinking about maybe how we could talk a little bit about some of those those aspects of of how people can kind of figure out how they're doing here we have thousands of companies out in start-up school and trying to figure out what to do next and whether they're doing the right thing and whether they're failing and whether they're on the right path what makes companies fail most of the time is poor execution by the founders right um we we often talk to startups who are worried about competitors and one good event one advantage of why is he having funded so many companies you have a really large data set and like how many companies have been killed by competitors one more than one out of nineteen hundred right um so I tell startups that basically you have the same protection against competitors that's that light aircraft have against crashing into other light aircraft when flying through clouds you know what the protection is space is large hey this little Cessnas don't have any radar in them you know you can't see in clouds it's this it's it this falls under the rubric of counterintuitive advice because one of the things that happens all the time is people come up and say oh my god there's another new company what should I you know that's in exactly my space what should I do right and it's sort of like if you're running the hundred meters right and suddenly there appears another lane with another runner in it what should you do you run as fast as you can just like you presumably were or hate if they're better than you they'll win and if not then then you'll win and that's a good reminder could everyone please silence your phones if you haven't already yeah what else like like one of the one of the things we do a lot is try to judge Wright companies in it founders Nick who's gonna succeed and and and you guys are doing the same thing except you're trying to pick yourselves hopefully what what what is it that then make startup succeed that makes startup succeed well you have to start with a good founding team ideally not just one person that's my quote you can do it with one person well I couldn't I couldn't III I ended up I ended up having to join other people like I actually think oh that's majority that was not rock you know I was no way like I couldn't do it I'm not built that way I think most people aren't built that way that's that's my questions about Robert and Trevor that you know it's just so difficult I would not try and start a start-up just with just myself as the founder hmm I don't think I could do it yeah it's lonely enough anyway think you can but I couldn't so um you need a good solid founding team who know one another well and who can work together just like stuff pause they're like knowing one another well why does that even matter because what happens in a startup will shake your relationship if there's any sort of flakiness or uncertainty or disloyalty or whatever like lingering in there it will emerge under the stresses of a start-up yeah it's like a marriage only harder you spend more time with that purpose other differences there's there's potentially yeah okay so you get a good founding team you get someone who you can stand stress with so there's two categories of stuff there's two categories of answers we could give here like there's the answer you give to investors about how to pick startups and there's the and then there's like only a subset of that is useful to founders right so like if like if you you know you could tell investors you want to pick smart people right but founders are as smart as they are if they party what can we tell them get smarter right um and actually it turns out it's not that important to be smart um it's much much more important to be determined if um if you imagine if you imagine this hypothetical person who's like a hundred hundred out of 100 for smart and a hundred out of 100 for determination right and then you start taking away determination you know it doesn't take very long before you have this sort of ineffectual but brilliant person um whereas if you take someone who's like super super determined and you start taking away smartness bit by bit I mean eventually you get to some guy who owns a lot of taxi medallions but he's still rich right or like a trash hauling business or something like that but like you can take away a lot of smart yeah you take a lot of smart and and add and take away a bunch of ethics at the same time and then you get that guy right he could be President yeah I've been thinking about what like zoos thought that would Trump would actually teach an important lesson yeah for startups it's all about determination I was think about these axes we we think about and those are two like of the intelligence axis and the determination axis and and obviously if you were really intelligent really determined that's awesome there's by the way only one person has to be super determined right right so like you know you can have one person who really wants to start the one the company and look in person you and Robin exactly who after a month is like what we're still working but that depends on this tight bond where you can drag that person along with you otherwise they'll go away but I was thinking there's actually another axis which is you have to have the ability somewhere on your team to to to project to think of but because your idea is gonna suck and then it'll suck less and less and so you have to have the ability to think what where should we like to navigate like you have to have some sort of creativity that allows you to to to like make the right choices and you know actually you might not have to be that creative if you care enough about users you can just follow what what MIT what will make users happy the way the way a scientist follows the truth and eventually without much thinking on your the need to grow will give you this product idea that's actually the product that's the result of evolution so maybe you're either sort of Steve Jobs and can intuit what customers need or you just have to have the skill of actually talking to customers and understanding what they're saying which isn't always obvious you know Steve Jobs his trick was he satisfied users to accept he was the user it's like I don't want to have any phone jack anymore so no more phone jacks for anybody right maybe he was just lucky that he his his desires were generic enough that it was closer everybody yeah yeah yeah he was living in the future yeah like he didn't really like the internet except for reading the New York Times so he never really got that right hmm interesting you work didn't you work you work at Apple at one point after you got bought did for this it was months what was it like what was Steve like could you tell from where you were in Apple what Steve was like yeah I got to talk to him a few times he um he's different tell us tell us how are their useful lessons you can learn from him or Zia one off I wouldn't presume I only met with from a handful of times and I wouldn't presume to know too much about them yeah you had a lot of indirect evidence and stories and stuff like that yeah like do you ever see founders at YC you think to yourself oh this is like Steve Jobs yeah I don't think we'd I don't think we'd fun to Steve Jobs at YC well that's not good yeah and the reason is especially when Steve Jobs was starting off he was an  oh I think actually you would find him because Steve Jobs would make you find him maybe right maybe we try like we try to avoid people who who seem like they're and I think like and and and like we like you know you wrote a whole essay on on being nice yeah the Ronco principle right there's a couple couples yeah be nice yeah and called be good be good right and and I don't think he would have passed the test especially when he was younger which is I worry about that because it's true that it's usually good to be nice and friendly and benevolent he wasn't maybe if YC had caught him early we could have helped maybe maybe that would be buddy maybe that's part of what made him successful in the beginning I don't know I don't know it worked for Donald Trump Donald or did it that's a different kind of that example right yeah we should know what like in business determination matters more but like business is not identical with startups I want to leave these these guys some time to ask questions but I want like what are they gonna get wrong what what mistakes will these people make that maybe maybe hearing them might help it probably won't because you won't listen but what you will get wrong is that you will not pay enough attention to users you will have you will make up some idea in your own head that you will call your vision and then you will spend a lot of time thinking about your vision in a cafe by yourself and right build some elaborate thing without going and talking to users because that's doing sales which is a pain in the ass and they might say no and and you'd be way better off finding someone anyone who has a problem that they will pay you to fix and fixing it and then seeing if you can find more people like that best case is if you yourself have the problem right but like you will not ship fast enough because you don't want to face the you you're embarrassed to ship something unfinished and you don't want to face the the the likely feedback it's humbling and humiliating when they tell you how shitty what you built actually is right but that's the only way you get it better yeah so you will shrink from contact with the real world or contact with your your users that's the mistake you will make yeah there's a Paul Graham ISM in there which is all around launching its launching before you're ready that some tell people the story of its Reid Hoffman actually who harped on that one early not me he there's I think he said if you're not embarrassed what with what you launched rather than you launch too late I remember when I was I was joining Y Combinator and at the same time this is not necessarily good idea of launching imagine k12 this this EdTech version of YC and and I came in to talk to Paul and he's like so how's it going with imagine k12 because he helped out a lot and I said well it was probably called something else well no no no still it was by then you'd already he actually gave us the name of Magic eight twelve and and so it was called a magic a twelve but it's like when you get a launch and I was like well we're going on our PR plan and we're finishing the software so this was like you know we're we're gonna have a summer batch and this was probably in February or something and and I said so we have like you know probably in like six weeks he said one he just launched when he just launched now and I was like damn he just did it to me and we did we launched we launched like within a week we launched and so that is a mistake you'll make you'll wait too long you'll you'll you'll be embarrassed you'll we launched YC probably in less than a week of having the idea of course launching it was merely saying was merely posting a website and and we didn't have we didn't have any software in the beginning people we just had this ascii form that people would fill out and reply to us by email the first couple batches the applications were by email we would print them out and pass them around amongst the partners and like we would all right grades on the top like we were grading papers and then we would sort this heap of papers and that was the application press talking about doing things that don't scale try to do that with thousands of applications now it would be harder so we have lots of software that does that because eventually you scale you know eventually you you build software when you learn what software you ought to be building it'd be fun to spend a lot of time more time talking about how why she got got started but but I think rather than that let's some how do you have left we can probably go to around 12 and and or all videos that get too long or like no one wants to watch anyway so so we've already been going for about 40 minutes or so so let's open it up to any questions you guys might have yeah are you saying that if you get if you recruit your co-founder your friends as co-founders you might lose them as friends I don't think that's a big danger I don't think you have so the question was should I have my friends be Cole founders and then maybe risk losing them as friends or should I just take someone off the street where I they're not I don't have the risk of losing them as friends but I they might break my company is that was that your question do I get that right I already answered it dude come on I just wanted to make sure they heard the question too just because I repeated the question how do you deal with different commitment levels of co-founders and if you do have to fire a co-founder what should you do okay so the way you deal with different commitment levels is you ask yourself would I rather have 30% of this person or a hundred percent of some other person and in my case I would rather have like 10% of Robert Morris's brain than a hundred percent of almost anybody else's so is an easy decision how do you could fire co-founders in Y Combinator the answer is you you ask carolyn levy y combinator as there's so much experience with dealing with crap like firing co-founders and like you just go and talk to them and they say here you do this and this and this right and it's probably online too so you could google it really is it YC published how to follow we've we have published we've actually if you look at some of the talks Carolyn has given and Christie I'm pretty sure they've covered that particular issue one way you deal with it by the way is making sure that someone has a little bit more stock perhaps like it's usually better to have somewhat equal shares not not but not completely equal and if one person has 51% the other person has 49% then they can you know deadlocked yes so when you talk about launch is launching to like private bailout a couple of people good enough what do you have you just launch so what does launch really mean it means you have actually okay so the question is is launching in a private beta to a few people good enough for you to have to launch the general public I will take launching in just a private beta to a couple people because that's closer to the that's closer to full launch than like just sitting thinking of your idea in a cafe next yes wouldn't we come out of the currently raising in the project maybe a little bit rate so basically you asking about I SEOs yeah what do you think about I CL is Paul I have I haven't I know nothing about this world um I've heard there's a huge amount of crypto money floating around um so like if there's money floating around it's often a good idea for startups to try and get it beyond that I don't know but but I will say like one of the things we've seen a lot at Y Combinator is it's not always right to raise too much money and even if you don't it like the IPO thing by definition of - it's always wrong yeah the the ways a lot of money and the thing about there's a couple reasons for that one you dilute more than you necessarily need to but the other reason is that money just sitting there has sort of a gravitational it makes you suspend it and it makes you do stupid things so it's like these companies that have raised a billion dollars on icos and I don't know if they'll ever have a real company where you get like you get a bunch of LPS and raise a billion dollars and then you just hire so many more people than you actually need right I know that's the difference when I see oh I get it but just having a billion dollars when you only barely have an idea is not necessarily you know magic leap raise 2.3 billion dollars and they seem to have almost nothing by the way that is the trick for getting your question answered I learned that a long time ago you raise your hand as your fin as people are finishing the preceding question and and I see that guy's hand over there he knows the trick go ahead what is it my best tips for a great user interview um well you want to figure out but not just what they think is wrong but what's actually wrong like what's missing in their life right so just start talking to them like say what would you like to do what would you like to be able to do that you can't and they might just you know they might they'll they'll tend to give you an answer that's like a subset right um like you know if you were asking someone about email they'd like to say I like you know I it's really important to me to be able to mark emails as unread right and like what does it mean unread that whole unread thing is a sign that the whole inbox is being misused it's what's really going on is it's a to-do list you know and that's why you have to mark items as unread so they stay on your to-do list um and so you could so you start asking them with what's wrong and then you try and figure out what they really mean what they're really getting at which they themselves might not know you know and then you start asking them so what if you could do such-and-such what if you could do such-and-such right so start by asking them questions about their life and then get hypothetical on them okay we should ask someone on this side you've taken over so you just keep calling them you're doing great but you you pick you'll go all right right there in the way corner how do you justify the financial risk of launching a shitty product okay so the risk of launching early is not as great as the risk of launching late it's not like there's only risk on one side right there's a risk of launching late too so you got to have a rule of thumb about when to launch and my rule of thumb the way I like I have this phrase for it that didn't become as sticky as Minimum Viable Product because it describes what the Minimum Viable Product has but it's a quantum of utility right um launch as soon as you have a quantum of utility which means as soon as you're there's one person in the world who is glad that you launched because now they can do something that they couldn't do when there's when you if you don't if you have something that if you launched it no one would be happy then you're not ready to launch right as soon as there's at least somebody out there who would say oh here's this thing I can use because I can do X and before that I couldn't do it then you should launch as soon as you have a quantum of utility it sounds like there's some wolves utility function like if it makes too many people happy and like one person happy in like a hundred really unhappy maybe it's not ready but if you you know Pablo Kaito he says if you have ten people who really love your product that's a good place to be yeah all you need is if you that's why if there's ten people who are super excited totally totally launch unlike and nobody else cares that is perfectly fine that's great okay well the danger of building okay so the question is how do you decide between building what people need and building what people want right well the problem is what you really want to be doing is build something people will choose to use or buy more becoming your user or something like that and so here's a counter example to the whole need versus one thing what people need is healthy food what people buy is unhealthy food so if you're a business which one do you want to do okay I mean yeah ideally you want to make healthy food that also tastes good right but really um you can't you can't push this too far you can't push this too far I mean I myself would not start some company making junk food or something like that but if you are making food don't like or something where need and want are very different be real careful about picking need you know or you'll go out and you know your goal will be to cleanse the world of sin or something like that it's it's easy to delude yourself as a founder to think you're like you yeah the other danger is what they need is what you think they what you what you're is implicitly talking about is what you think they need cleanse the world of your definition of sin right yes yeah normal as a founder to be to see multiple different solutions yeah sure absolutely you just have to pick one pick the one that you think could get could get usage quickest what's the founder DNA founder DNA bothers you mean what makes a what makes someone a founder yes it choose to be one what makes someone a good founder a combination of positive and negative things I think positive things are things like determination and you know willingness to try new things but then there may also be negative things like if if you are I think if you have worked for a large company for twenty years you might not be a founder unless you were forced to for visa reasons because if you were the kind of person that would that would make a good founder you wouldn't be able to stand working for a large company for twenty years right and so actually we've noticed certain companies where the the alumni of these companies tend to make bad founders and it's because no one who would make a good founder could have stood working for these companies for very long okay maybe we should pick one on this side okay what do you what are you price during lunch well you can probably guess if you know your business you know roughly what you should charge so you should probably just go with whatever you'd guess if you want to be more scientific about it you could try talking to it talking to some potential users most of the time you have some sort of tame users who are actual users but are also friends of yours or something like that or family and you can ask them tell me honestly like what would you actually pay for this right um you can always change your prices later though if you want to lower your prices no one's gonna complain and if you want a grant if you want to raise your prices you just grandfather your existing users which if you have exponential growth will always be a tiny subset of your total users and then no one will complain about that either so don't sweat about it too much one way I think about that is it just seems like in the beginning what you need more than anything is customers and you want them to pay so you will need to pick a price that gets you customers so you'll learns because you learned so much from those customers and you're right don't lose don't leave you customer price yeah cuz in the beginning you just want growth because the customers teach you the first customers don't just give you money they teach you all right two more questions you choose you you pick to you okay right up front here angel investing so my name is Karen and I'm with chat goose which is a chat manager so three tips for dealing with and finding angel investors if you don't have you know the original goals etc well we never talked about fundraising at all well maybe I'll have to do this whole thing again that's good fun fundraising as it is it as a as a Nakia is the thing to occupy your thoughts as a founder is overrated it's better not to be spending all your time thinking about fundraising we come to it much later in the class we don't need to all right so the question was how to find angel investors well that's the part that's the thing I'm particularly ill-suited to answering that question because Y Combinator is like this machine for funneling angel investors into all the startups that it accepts so like how do you find angel investors if you don't it's like asking a pilot how to you know walk along and track on the ground I know the least about that um here's the thing angel investors are looking for you so get out there go to I don't know well there's there's lots of startup events the angels are ancient like they're not necessarily good angels but angels are out there looking and the look the best way to actually meet angels is to get one to invest in you and then to introduce you to people actually I know the answer to this I know the answer find find people who work at startups and ask them to introduce you to their investors that's the way to do it that's good that's a good answer okay last question Paul you get to you get to choose maybe from this right there is why is he thinking of going after high school students to fund well I don't know because I don't think on behalf of YC anymore but you better not be because that would be an evil thing to do there at wise high school students could there are plenty of high school students who could start successful startups but they shouldn't just because you could start a successful startup doesn't mean you should because if you start a successful startup like that means like the you know the Footloose and francy fancy-free days of your life are over hey that like you're going for that company but we have funded kids in high school but only because they're already going like like it's that we're not encouraging that I agree you think to go to high school encourage kids to like do this incredibly hard thing instead of how fun and like like being kids that's that's awful I actually think that it's MoMA Chur optimization to write what you should be doing when you're in high school and even college is you should be figuring out what the options are we're not picking one option and running with it right and you know it just turns out that usually people who are in school and then stop to start companies it's like you know there are dropouts from Harvard we know the classic examples but if you have like if you drop out and just go do it and it's you're on a path that's one thing but most people like they're dabbling and they have a fallback and that's not a good way to be a startup founder you have to be a hundred percent committed and so we'll fund people in college maybe even high school if they're already clearly a 100% committed otherwise no whatever Trent I think that trend you're talking about is that is that you graduate from high school and why bother getting a college degree because you're already a fantastic hacker so I'm going to hire you and and if that person wants to enter the professional workforce well that that's great I don't know I was I don't think I would it would have been good for me it wouldn't have been good for me either but you know like go off and start just some startup I just think between 18 and 22 you grow a lot as a human being who's human and humane and it's not clear what what society will turn into if we if all those folks enter the workforce it's it's good to like mess around and do a whole bunch of different things in your early 20s if you could have work yeah whether it's whether this messing around doing a whole bunch of things takes the form of college or something else just like don't be careful because like starting a startup is like catching a dragon by the tail if it works it like be careful at what point in your life you do that Paul thank you very much for coming in thank you deaf you you